namespace = mymo

mymo.1 = { # Fill all the monastery courts which are empty
	hidden = yes

	immediate = {
		every_realm_province = {
			limit = {
				has_holding_type = monastery_holding
				province_owner = {
					any_courtier = {
						has_monastic_trigger = yes
						count = 0
					}
				}
			}
			save_scope_as = monastery_province
			create_character = {
				template = monk_character
				employer = scope:monastery_province.province_owner
				culture = scope:monastery_province.culture
				faith = scope:monastery_province.faith
				after_creation = {
					add_character_flag = blocked_from_leaving
					add_character_flag = monastic_courtier
				}
			}			
		}
	}
}

mymo.2 = {
	type = character_event
	title = mymo.2.t
	desc = {
		desc = mymo.2.desc0
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:holding_2_convert = {
						has_holding_type = church_holding
					}
				}
				desc = mymo.2.descA
			}
			triggered_desc = {
				trigger = {
					scope:holding_2_convert = {
						has_holding_type = monastery_holding
					}
				}
				desc = mymo.2.descB
			}
			desc = mymo.2.descC
		}
	}
	
	left_portrait = {
		character = scope:builder
		animation = personality_rational 
	}
	right_portrait = { 
		character = scope:holding_current_holder
		animation = worry
	}
	
	theme = faith
	
    trigger = {
		scope:holding_2_convert = {
			#NOT = { has_holding_type = none }
			OR = {
				has_holding_type = church_holding
				has_holding_type = monastery_holding
			}
			NOT = { 
				has_province_modifier = temple_conversion_blocker
				scope:county = { has_county_modifier = temple_conversion_blocker }
			}
			OR = {
				province_owner = scope:builder
				AND = {
					province_owner = {
						highest_held_title_tier = 1
						liege = scope:builder
					}
				}
			}
		}
		#ai = no
    }
	
 	immediate = {
		scope:holding_2_convert.barony = { save_scope_as = title_revoke } #.barony should be the same thing ?
		scope:holding_2_convert.county = { save_scope_as = title_county }
	}

	option = {
		#province pays
		name = mymo.2.A	
		scope:holding_2_convert = {
			
			if = {
				limit = {has_variable = temple_convert_to_church}
				set_holding_type = church_holding
			}
			if = {
				limit = {has_variable = temple_convert_to_monastery}
				set_holding_type = monastery_holding
			}
			scope:builder = { get_title = scope:title_revoke }
			scope:holding_current_holder = { revoke_lease = yes }
			add_province_modifier = { 
				modifier = temple_conversion_province_pays
				years = 10
			}

			trigger_event = {id = mymo.3 days = 1} #test value
			trigger_event = {id = mymo.3 years = 2}
		
		
			#
			#deal with building levels
			#			
			#
			#

		}

	}
	option = {
		#county people pays
		name = mymo.2.B	
		scope:holding_2_convert = {
			
			if = {
				limit = {has_variable = temple_convert_to_church}
				set_holding_type = church_holding
			}
			if = {
				limit = {has_variable = temple_convert_to_monastery}
				set_holding_type = monastery_holding
			}
			scope:builder = { get_title = scope:title_revoke }
			scope:holding_current_holder = { revoke_lease = yes }
			


			trigger_event = {id = mymo.3 days = 1} #test value
			trigger_event = {id = mymo.3 years = 2}
		}
		scope:holding_2_convert.county = {
			add_county_modifier = { 
				modifier = temple_conversion_county_peasants_pays 
				years = 5
			}
		}
	}
	option = {
		#county clergy pays
		name = mymo.2.C	
		scope:holding_2_convert = {
			
			if = {
				limit = {has_variable = temple_convert_to_church}
				set_holding_type = church_holding
			}
			if = {
				limit = {has_variable = temple_convert_to_monastery}
				set_holding_type = monastery_holding
			}
			scope:builder = { get_title = scope:title_revoke }
			scope:holding_current_holder = { revoke_lease = yes }


			trigger_event = {id = mymo.3 days = 1} #test value
			trigger_event = {id = mymo.3 years = 2}
		}
			
		scope:holding_2_convert.county = {
			add_county_modifier = { 
				modifier = temple_conversion_county_clergy_pays 
				years = 5
			}
			change_county_control = -20
		}
	}
	option = {
		#county burghers pays, needs a city in there
		name = mymo.2.D
		trigger = {
			scope:holding_2_convert.county = {
				any_county_province = {
					has_building_with_flag = city
				}
			}
		}
		scope:holding_2_convert = {
			
			if = {
				limit = {has_variable = temple_convert_to_church}
				set_holding_type = church_holding
			}
			if = {
				limit = {has_variable = temple_convert_to_monastery}
				set_holding_type = monastery_holding
			}
			scope:builder = { get_title = scope:title_revoke }
			#
			#
			#
			#!! lease thingy doesn't work
			scope:holding_current_holder = { revoke_lease = yes }
			

			trigger_event = {id = mymo.3 days = 1} #test value
			trigger_event = {id = mymo.3 years = 2}
		}
		scope:holding_2_convert.county = {
			add_county_modifier = { 
				modifier = temple_conversion_county_burghers_pays 
				years = 5
			}
		}

	}
	option = {
		#no/not yet
		name = mymo.2.E
	}
	after = {
		scope:holding_2_convert = { remove_variable = convert_prop }
	}
}


mymo.3 = { # Notification
	type = province
	hidden = yes

	immediate = {
		
		if = {
			limit = {
				has_holding_type = monastery_holding
			}
			county_controller = {
				send_interface_toast = {
					title = holding_conversion_done
					left_icon = root.county
					right_icon = scope:title_revoke
					custom_tooltip = holding_converts_toA
				}
			}
		}
		if = {
			limit = {
				has_holding_type = church_holding
			}
			county_controller = {
				send_interface_toast = {
					title = holding_conversion_done
					left_icon = root.county
					right_icon = scope:title_revoke
					custom_tooltip = holding_converts_toB
				}
			}
		}
	}
	after = {
		remove_variable = temple_convert_to_church
		remove_variable = temple_convert_to_monastery
	}
}